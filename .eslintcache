[{"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\index.js":"1","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\App.js":"2","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\reportWebVitals.js":"3","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Header\\Header.js":"4","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Shop\\Shop.js":"5","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\index.js":"6","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\android.js":"7","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\camera.js":"8","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\laptop.js":"9","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Cart\\Cart.js":"10","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Product\\Product.js":"11","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\NotFound\\NotFound.js":"12","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\ReviewOrder\\ReviewOrder.js":"13","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Inventory\\Inventory.js":"14","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\ProductDetail\\ProductDetail.js":"15","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\utilities\\databaseManager.js":"16","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\ReviewItem\\ReviewItem.js":"17","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Shipment\\Shipment.js":"18","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Login\\Login.js":"19","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Login\\firebase.config.js":"20","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\PrivateRoute\\PrivateRoute.js":"21","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Login\\loginManager.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":1897,"mtime":1617850360138,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1370,"mtime":1611038716400,"results":"27","hashOfConfig":"24"},{"size":2401,"mtime":1611234779600,"results":"28","hashOfConfig":"24"},{"size":362,"mtime":1583014415000,"results":"29","hashOfConfig":"24"},{"size":19555,"mtime":1583014415000,"results":"30","hashOfConfig":"24"},{"size":17767,"mtime":1583014415000,"results":"31","hashOfConfig":"24"},{"size":21341,"mtime":1583014415000,"results":"32","hashOfConfig":"24"},{"size":1599,"mtime":1611235177309,"results":"33","hashOfConfig":"24"},{"size":1831,"mtime":1610464563899,"results":"34","hashOfConfig":"24"},{"size":176,"mtime":1610395827641,"results":"35","hashOfConfig":"24"},{"size":2023,"mtime":1611237384750,"results":"36","hashOfConfig":"24"},{"size":760,"mtime":1611235868906,"results":"37","hashOfConfig":"24"},{"size":697,"mtime":1611209976192,"results":"38","hashOfConfig":"24"},{"size":1644,"mtime":1611237384749,"results":"39","hashOfConfig":"24"},{"size":1053,"mtime":1610543229585,"results":"40","hashOfConfig":"24"},{"size":1896,"mtime":1611230615083,"results":"41","hashOfConfig":"24"},{"size":3696,"mtime":1610990269140,"results":"42","hashOfConfig":"24"},{"size":348,"mtime":1610800651006,"results":"43","hashOfConfig":"24"},{"size":630,"mtime":1610808226266,"results":"44","hashOfConfig":"24"},{"size":2933,"mtime":1611138197741,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1o72wbv",{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\index.js",[],["104","105"],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\App.js",["106","107","108","109"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Shop from './Components/Shop/Shop';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { createContext, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nimport NotFound from './Components/NotFound/NotFound';\nimport ReviewOrder from './Components/ReviewOrder/ReviewOrder';\nimport Inventory from './Components/Inventory/Inventory';\nimport ProductDetail from './ProductDetail/ProductDetail';\nimport Shipment from './Components/Shipment/Shipment';\nimport Login from './Components/Login/Login';\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\n\n\nexport const UserContext = createContext();\n\n\n\nfunction App() {\n\nconst [loggedInUser, setLoggedInUser ] = useState({});\n\n\n  return (\n    <UserContext.Provider value={[loggedInUser, setLoggedInUser]} className=\"App\">\n    <h1>Name: {loggedInUser.email} </h1>\n   \n \n    <Router>\n    <Header></Header>\n        <Switch>\n          <Route path=\"/\">\n            <Shop></Shop>\n          </Route>\n          <Route path=\"/review\">\n         <ReviewOrder></ReviewOrder>\n          </Route>\n          \n          <Route path=\"/login\">\n            <Login></Login>\n          </Route>\n          <PrivateRoute path=\"/inventory\">\n          <Inventory></Inventory>\n          </PrivateRoute>\n          <PrivateRoute path=\"/shipment\">\n            <Shipment></Shipment>\n          </PrivateRoute>\n          <Route path=\"/product/:key\">\n<ProductDetail></ProductDetail>\n\n          </Route>\n\n          <Route exact path=\"/\">\n            <Shop></Shop>\n          </Route>\n          <Route path='*'>\n            <NotFound></NotFound>\n            \n          </Route>\n        </Switch>\n  \n    </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\reportWebVitals.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Header\\Header.js",["110"],"import React, { useContext } from 'react';\r\nimport Logo from '../../images/mainamazon.png'\r\nimport './Header.css';\r\nimport { Nav, Form, FormControl, Button, Navbar } from 'react-bootstrap';\r\nimport Small from '../../images/amazon.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\n\r\nconst Header = () => {\r\n\r\nconst [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    return (\r\n        <div className=\"headers\" >\r\n\r\n<img style={{marginTop: \"20px\"}} src={Logo} alt=\"\"/>\r\n\r\n\r\n<Navbar style={{marginTop: \"20px\" , backgroundColor: 'purple' }}  variant=\"dark\">\r\n\r\n    <Navbar.Brand as={Link} to=\"/\"> <img style={{height: '20px' , width: '20px' }} src={Small} alt=\"\"/> amazon</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link as={Link} to=\"/shop\" >Shop</Nav.Link>\r\n      <Nav.Link as={Link} to=\"/review\">Review</Nav.Link>\r\n      <Nav.Link as={Link} to=\"/inventory\" >Manage Inventory</Nav.Link>\r\n      <Nav.Link as={Link} to=\"/login\" >Login</Nav.Link>\r\n      \r\n    </Nav>\r\n    \r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"dark\">Search</Button>\r\n    </Form>\r\n    <Button onClick={() => setLoggedInUser({}) } variant=\"light\" style={{margin: '10px 40px'}} > Sign Out </Button>\r\n  </Navbar>\r\n\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Header;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Shop\\Shop.js",["111"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\r\nimport Cart from '../Cart/Cart';\r\nimport Product from '../Product/Product'\r\nimport './Shop.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faListAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Shop = () => {\r\n  \r\n    const [products, setProducts] = useState([]);\r\n    const [cart, setCart] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/products')\r\n            .then(res => res.json())\r\n            .then(data => setProducts(data))\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const savedCart = getDatabaseCart();\r\n        const productKeys = Object.keys(savedCart);\r\n\r\n        fetch('http://localhost:5000/productByKeys', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(productKeys)\r\n})\r\n.then(res => res.json())\r\n.then(data => setCart(data))\r\n}, []);\r\n\r\n\r\nconst handleAddProduct = (product) => {\r\n    const toBeAddedKey = product.key;\r\n    const sameProduct = cart.find(pd => pd.key === toBeAddedKey);\r\n    let count ;\r\n    let newCart;\r\n    if (sameProduct) {\r\n       \r\n        count = sameProduct.quantity + 1;\r\n        sameProduct.quantity = count;\r\n        const others = cart.filter(pd => pd.key !== toBeAddedKey)\r\n        newCart = [...others, sameProduct];\r\n\r\n\r\n\r\n    }\r\n    else {\r\n        product.quantity = 1;\r\n        newCart = [...cart, product];\r\n\r\n    }\r\n\r\n\r\n\r\n    setCart(newCart);\r\n    addToDatabaseCart(product.key, count);\r\n}\r\n\r\nreturn (\r\n    <div className=\"shop-container\">\r\n        <div className='product-container'>\r\n            {\r\n                products.map(product => <Product key={product.key} showButtons={true} handleAddProduct={handleAddProduct} product={product} ></Product>)\r\n            }\r\n\r\n        </div>\r\n        <div className=\"cart-container\">\r\n            <Cart cart={cart} >\r\n                <Link to=\"/review\" ><Button style={{ width: '100%' }} variant=\"warning\"> <FontAwesomeIcon icon={faCheckCircle} />  Order Review</Button></Link>\r\n            </Cart>\r\n        </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Shop;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\index.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\android.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\camera.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\fakeData\\laptop.js",[],["112","113"],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Cart\\Cart.js",["114","115","116"],"import React from 'react';\r\nimport { Card, ListGroup, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faListAlt  } from '@fortawesome/free-solid-svg-icons';\r\nimport './Cart.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cart = ({ cart , children }) => {\r\n  const product = cart;\r\n  const total = product.reduce((total, prd) => total + (prd.price* prd.quantity || 1) ,0) ;\r\n  \r\n  const shipping = 16*product.length;\r\n  const vat = total/10;\r\n  const grandTotal = total+shipping+vat;\r\n  const formatNumber = num =>{\r\n    const precision = num.toFixed(2);\r\n    return Number(precision);\r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Card style={{ width: '20rem' }}>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <Card.Header><FontAwesomeIcon icon={faListAlt} /> Order Summary</Card.Header>\r\n        </div>\r\n        <ListGroup variant=\"flush\" >\r\n          <ListGroup.Item ><h6 className='cardList' > Product Ordered </h6>  {product.length} </ListGroup.Item>\r\n          <ListGroup.Item ><h6 className='cardList' > Price</h6> {formatNumber(total)} </ListGroup.Item>\r\n          <ListGroup.Item > <h6 className='cardList' > Shipping</h6> {formatNumber(shipping)}</ListGroup.Item>\r\n          <ListGroup.Item > <h6 className='cardList' > Vat</h6> {formatNumber(vat)}</ListGroup.Item>\r\n          \r\n\r\n        </ListGroup>\r\n        <Card.Header><h6 className='cardList' >Total Price</h6> {formatNumber(grandTotal)}</Card.Header>\r\n      {\r\nchildren\r\n      }\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Product\\Product.js",["117"],"import React from 'react';\r\nimport { Card , Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus,  faInfoCircle, faArrowLeft  } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Product = ({ showButtons , handleAddProduct , product}) => {\r\n    const {img, name, price, seller, stock, key} = product;\r\n\r\n    return (\r\n        <div>\r\n            <Card border=\"primary\" style={{border: \"primary\" ,   width: '98%' , margin: \"20px auto\" }}>\r\n  <div style={{textAlign: \"center\"}}>\r\n  <Card.Img variant=\"top\" src={img} style={{height: \"200px\", width: \"200px\"}} />\r\n  </div>\r\n  <Card.Body>\r\n    <Card.Title>Price:  ${price}</Card.Title>\r\n    \r\n    <small>By: {seller}</small>\r\n    <br/>\r\n    <small>Stock Limited: {stock} Items Remains</small>\r\n    <Card.Text style={{ height: '60px' ,boxSizing: 'border-box' , overflow: 'hidden' }}>\r\n        {name}\r\n    </Card.Text>\r\n{\r\n     showButtons &&           <div style={{ display: \"grid\", gridTemplateColumns: '50% 50%', margin: '0px', padding: '0px' }}>\r\n                <div>\r\n                <Link to={\"/product/\"+key} > <Button variant=\"danger\"  > <FontAwesomeIcon icon={faInfoCircle} /> <small>Show Details</small> </Button> </Link>\r\n                </div>\r\n                <div>\r\n                <Button variant=\"dark\"   onClick = {() => handleAddProduct(product)} > <FontAwesomeIcon icon={faCartPlus} /> <small>Add To Cart</small> </Button>\r\n                </div>\r\n    \r\n                </div>\r\n}\r\n{\r\n    showButtons == false && \r\n    <Link to={\"/shop\"} > <Button variant=\"warning\" style={{ width: '20%' }} > <FontAwesomeIcon icon={faArrowLeft} /> <small>Go Back</small> </Button> </Link>\r\n}\r\n     </Card.Body>\r\n</Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\NotFound\\NotFound.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\ReviewOrder\\ReviewOrder.js",["118"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { getDatabaseCart, processOrder, removeFromDatabaseCart } from '../../utilities/databaseManager';\r\nimport Cart from '../Cart/Cart';\r\nimport ReviewItem from '../ReviewItem/ReviewItem';\r\nimport './ReviewOrder.css';\r\nimport {  Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLongArrowAltRight  } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst ReviewOrder = () => {\r\n\r\n    const [cart, setCart] = useState([]);\r\nconst history = useHistory();\r\n\r\n\r\n    const handleProceedCheckout = () => {\r\n       history.push('/shipment');\r\n    }\r\n\r\n    const removeProduct = (productKey) =>{\r\n        \r\n        const newCart = cart.filter(pd => pd.key !== productKey);\r\n        setCart(newCart);\r\n        removeFromDatabaseCart(productKey);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const savedCart = getDatabaseCart();\r\n        const productKeys = Object.keys(savedCart);\r\n\r\n        fetch('http://localhost:5000/productByKeys', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(productKeys)\r\n})\r\n.then(res => res.json())\r\n.then(data => setCart(data))\r\n},[]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"shop-container\">\r\n          <div className=\"remove-container\" >  \r\n          {\r\n               cart.map(product => <ReviewItem key={product.key} removeProduct={removeProduct} product={product} ></ReviewItem>  )\r\n           }\r\n          </div>\r\n          <div className=\"cart-container\" >\r\n              <Cart cart={cart}>\r\n\r\n            <Button onClick={handleProceedCheckout} style={{width: '100%', backgroundColor: 'salmon' , border: 'none'  }} >  Procced Checkout <FontAwesomeIcon icon={faLongArrowAltRight} /> </Button>\r\n\r\n              </Cart>\r\n              \r\n          </div>\r\n         \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewOrder;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Inventory\\Inventory.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\ProductDetail\\ProductDetail.js",["119"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport fakeData from '../fakeData';\r\nimport Product from '../Components/Product/Product';\r\nconst ProductDetail = () => {\r\n\r\nconst {key}=useParams();\r\nconst [product, setProduct] = useState({});\r\n\r\nuseEffect(() => {\r\nfetch('http://localhost:5000/product/'+ key)\r\n.then(res => res.json())\r\n.then(data => setProduct(data));\r\n},[key])\r\n\r\n\r\n//const product = fakeData.find(pd => pd.key === key);\r\nconsole.log(product);\r\n    return (\r\n        <div>\r\n           {\r\n               <Product showButtons={false} product={product} ></Product>\r\n           }\r\n   </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\utilities\\databaseManager.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\ReviewItem\\ReviewItem.js",["120"],"import React, { useState } from 'react';\r\nimport { Card , Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash  } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\n\r\n\r\nconst ReviewItem = ({removeProduct, product}) => {\r\n    const {img, name, price, quantity , key} = product;\r\n    \r\n    \r\n  \r\n\r\n    return (\r\n        <div>\r\n            <Card style={{ width: '96%', display: 'grid', gridTemplateColumns: \"auto auto\" , margin: '10px 10px' }}>\r\n \r\n <Card.Img style={{height: \"200px\", width: \"200px\", marginLeft:'20px' ,marginRight: '90px'}} variant=\"top\" src={img} />\r\n \r\n <Card.Body style={{ width: '500px'}} >\r\n    <Card.Title>Price: ${price}</Card.Title>\r\n    <Card.Text>Quantity: <b>{quantity}</b> </Card.Text>\r\n    <Card.Text>\r\n      {name}\r\n    </Card.Text>\r\n    <Button variant=\"danger\" style={{marginTop: '60px'}} onClick ={() => removeProduct(key)} ><FontAwesomeIcon icon={faTrash} /> Remove</Button>\r\n  </Card.Body>\r\n</Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewItem;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Shipment\\Shipment.js",["121","122"],"import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { UserContext } from '../../App';\r\nimport { getDatabaseCart, processOrder } from '../../utilities/databaseManager';\r\nimport './Shipment.css';\r\n\r\nconst Shipment = () => {\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\nconst [loggedInUser, setLoggedInUser ] = useContext(UserContext);\r\n\r\n  const onSubmit = data =>{\r\n    const savedCart = getDatabaseCart();\r\n    const orderDetails = {...loggedInUser, products: savedCart, shipment: data, orderTime: new Date()}\r\n \r\n    fetch('http://localhost:5000/addOrder', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(orderDetails)\r\n    })\r\n .then(res => res.json())\r\n .then(data => {\r\n   if(data){\r\n     processOrder();\r\n     alert('Your Order Placed Successfully');\r\n   }\r\n })\r\n  };\r\n\r\n    return (\r\n        \r\n        <form className=\"ship-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      \r\n          \r\n          <input name=\"name\" defaultValue={loggedInUser.name} ref={register({ required: true })} placeholder=\"Your Name\"/>\r\n          {errors.name && <span className=\"error\">Name is required</span>}\r\n          <input name=\"email\" defaultValue={loggedInUser.email } ref={register({ required: true })} placeholder=\"Your Email\" />\r\n          {errors.email  && <span className=\"error\">Name is required</span>}\r\n          <input name=\"address\" ref={register({ required: true })}  placeholder=\"Your Address\" />\r\n          {errors.address && <span className=\"error\">Name is required</span>}\r\n          <input name=\"phone\" ref={register({ required: true })} placeholder=\"Your Phone\" />\r\n          {errors.phone && <span className=\"error\">Name is required</span>}\r\n          \r\n          <input type=\"submit\" />\r\n        </form>\r\n      );\r\n};\r\n\r\nexport default Shipment;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Login\\Login.js",["123"],"import React, { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { initializeLoginFramework, handleGoogleSignIn, handleSignOut, handleFbSignIn, createUserWithEmailAndPassword, signInWithEmailAndPassword } from './loginManager';\r\n\r\n\r\n\r\nfunction Login() {\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [user, setUser] = useState({\r\n    isSignedIn: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    photo: ''\r\n  });\r\n\r\n  initializeLoginFramework();\r\n\r\n  const [loggedInUser, setLoggedInUser ] = useContext(UserContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const googleSignIn = () => {\r\n      handleGoogleSignIn()\r\n      .then(res => {\r\n        handleResponse(res, true);\r\n      })\r\n  }\r\n\r\n  const fbSignIn = () => {\r\n      handleFbSignIn()\r\n      .then(res => {\r\n        handleResponse(res, true);\r\n      })\r\n\r\n  }\r\n\r\n  const signOut = () => {\r\n      handleSignOut()\r\n      .then(res => {\r\n          handleResponse(res, false);\r\n      })\r\n  }\r\n\r\n  const handleResponse = (res, redirect) =>{\r\n    setUser(res);\r\n    setLoggedInUser(res);\r\n    if(redirect){\r\n        history.replace(from);\r\n    }\r\n  }\r\n\r\n  const handleBlur = (e) => {\r\n    let isFieldValid = true;\r\n    if(e.target.name === 'email'){\r\n      isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n    }\r\n    if(e.target.name === 'password'){\r\n      const isPasswordValid = e.target.value.length > 6;\r\n      const passwordHasNumber =  /\\d{1}/.test(e.target.value);\r\n      isFieldValid = isPasswordValid && passwordHasNumber;\r\n    }\r\n    if(isFieldValid){\r\n      const newUserInfo = {...user};\r\n      newUserInfo[e.target.name] = e.target.value;\r\n      setUser(newUserInfo);\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    if(newUser && user.email && user.password){\r\n      createUserWithEmailAndPassword(user.name, user.email, user.password)\r\n      .then(res => {\r\n        handleResponse(res, true);\r\n      })\r\n    }\r\n\r\n    if(!newUser && user.email && user.password){\r\n      signInWithEmailAndPassword(user.email, user.password)\r\n      .then(res => {\r\n        handleResponse(res, true);\r\n      })\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      { user.isSignedIn ? <button onClick={signOut}>Sign Out</button> :\r\n        <button onClick={googleSignIn}>Sign In</button>\r\n      }\r\n      <br/>\r\n      <button onClick={fbSignIn}>Sign in using Facebook</button>\r\n      {\r\n        user.isSignedIn && <div>\r\n          <p>Welcome, {user.name}!</p>\r\n          <p>Your email: {user.email}</p>\r\n          <img src={user.photo} alt=\"\"/>\r\n        </div>\r\n      }\r\n\r\n      <h1>Our own Authentication</h1>\r\n      <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\"/>\r\n      <label htmlFor=\"newUser\">New User Sign up</label>\r\n      <form onSubmit={handleSubmit}>\r\n        {newUser && <input name=\"name\" type=\"text\" onBlur={handleBlur} placeholder=\"Your name\"/>}\r\n        <br/>\r\n        <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Your Email address\" required/>\r\n        <br/>\r\n        <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Your Password\" required/>\r\n        <br/>\r\n        <input type=\"submit\" value={newUser ? 'Sign up' : 'Sign in'}/>\r\n      </form>\r\n      <p style={{color: 'red'}}>{user.error}</p>\r\n      { user.success && <p style={{color: 'green'}}>User { newUser ? 'created' : 'Logged In'} successfully</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Login\\firebase.config.js",[],"O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\PrivateRoute\\PrivateRoute.js",["124"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext); \r\n    return (\r\n        \r\n        <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedInUser.email ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","O:\\Study\\project\\Assignments\\amazon\\amazon1\\src\\Components\\Login\\loginManager.js",["125"],"import  firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\nexport const initializeLoginFramework = () => {\r\n    if(firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\n\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n    .then(res => {\r\n      const {displayName, photoURL, email} = res.user;\r\n      const signedInUser = {\r\n        isSignedIn: true,\r\n        name: displayName,\r\n        email: email,\r\n        photo: photoURL,\r\n        success: true\r\n      };\r\n      return signedInUser;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      console.log(err.message);\r\n    })\r\n  }\r\n\r\n  export const handleFbSignIn = () => {\r\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n    return firebase.auth().signInWithPopup(fbProvider).then(function(result) {\r\n      var token = result.credential.accessToken;\r\n      var user = result.user;\r\n      user.success = true;\r\n      return user;\r\n    }).catch(function(error) {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(errorCode, errorMessage)\r\n    });\r\n  }\r\n\r\n  export const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n    .then(res => {\r\n      const signedOutUser = {\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        photo: '',\r\n        error: '',\r\n        success: false\r\n      }\r\n      return signedOutUser;\r\n    }).catch(err => {\r\n      // An error happened.\r\n    });\r\n  }\r\n\r\n export const createUserWithEmailAndPassword = (name, email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then( res => {\r\n      const newUserInfo = res.user;\r\n      newUserInfo.error = '';\r\n      newUserInfo.success = true;\r\n      updateUserName(name);\r\n      return newUserInfo;\r\n    })\r\n    .catch( error => {\r\n      const newUserInfo = {};\r\n      newUserInfo.error = error.message;\r\n      newUserInfo.success = false;\r\n      return newUserInfo;\r\n    });\r\n }\r\n\r\n export const signInWithEmailAndPassword = (email, password) =>{\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(res => {\r\n      const newUserInfo = res.user;\r\n      newUserInfo.error = '';\r\n      newUserInfo.success = true;\r\n      return newUserInfo;\r\n    })\r\n    .catch(function(error) {\r\n      const newUserInfo = {};\r\n      newUserInfo.error = error.message;\r\n      newUserInfo.success = false;\r\n      return newUserInfo;\r\n    });\r\n }\r\n\r\n const updateUserName = name =>{\r\n    const user = firebase.auth().currentUser;\r\n\r\n    user.updateProfile({\r\n      displayName: name\r\n    }).then(function() {\r\n      console.log('user name updated successfully')\r\n    }).catch(function(error) {\r\n      console.log(error)\r\n    });\r\n  }",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":12},{"ruleId":"130","severity":1,"message":"134","line":11,"column":3,"nodeType":"132","messageId":"133","endLine":11,"endColumn":7},{"ruleId":"130","severity":1,"message":"135","line":12,"column":3,"nodeType":"132","messageId":"133","endLine":12,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":13,"column":3,"nodeType":"132","messageId":"133","endLine":13,"endColumn":12},{"ruleId":"130","severity":1,"message":"137","line":12,"column":8,"nodeType":"132","messageId":"133","endLine":12,"endColumn":20},{"ruleId":"130","severity":1,"message":"138","line":9,"column":25,"nodeType":"132","messageId":"133","endLine":9,"endColumn":34},{"ruleId":"126","replacedBy":"139"},{"ruleId":"128","replacedBy":"140"},{"ruleId":"130","severity":1,"message":"141","line":2,"column":27,"nodeType":"132","messageId":"133","endLine":2,"endColumn":33},{"ruleId":"130","severity":1,"message":"142","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":23},{"ruleId":"130","severity":1,"message":"134","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":38,"column":17,"nodeType":"145","messageId":"146","endLine":38,"endColumn":19},{"ruleId":"130","severity":1,"message":"147","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":39},{"ruleId":"130","severity":1,"message":"148","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":16},{"ruleId":"130","severity":1,"message":"149","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"150","line":9,"column":37,"nodeType":"132","messageId":"133","endLine":9,"endColumn":42},{"ruleId":"130","severity":1,"message":"151","line":10,"column":22,"nodeType":"132","messageId":"133","endLine":10,"endColumn":37},{"ruleId":"130","severity":1,"message":"137","line":21,"column":10,"nodeType":"132","messageId":"133","endLine":21,"endColumn":22},{"ruleId":"130","severity":1,"message":"151","line":6,"column":26,"nodeType":"132","messageId":"133","endLine":6,"endColumn":41},{"ruleId":"130","severity":1,"message":"152","line":34,"column":11,"nodeType":"132","messageId":"133","endLine":34,"endColumn":16},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'loggedInUser' is assigned a value but never used.","'faListAlt' is defined but never used.",["153"],["154"],"'Button' is defined but never used.","'faCheckCircle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'processOrder' is defined but never used.","'fakeData' is defined but never used.","'useState' is defined but never used.","'watch' is assigned a value but never used.","'setLoggedInUser' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]